#!/bin/bash
#
# Init file for PHP FastCGI server daemon
#
# /etc/init.d/php-fastcgi
#
### BEGIN INIT INFO
# Provides:          php-fastcgi
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       PHP FastCGI server
### END INIT INFO

# Hack to make the script work mostly unchanged on non-openSUSE systems
if [[ -f /etc/rc.status ]]; then
  . /etc/rc.status
else
  rc_status()
  {
    _rc_status=$?
    (( _rc_status == 0 )) && echo "done" || echo "failed"
  }

  rc_reset()
  {
    _rc_status=0
  }

  rc_exit()
  {
    exit $_rc_status
  }

  killproc()
  {
    local pid=`cat "$PID_FILE"`
    [[ -n $pid ]] && kill "$pid" || true
  }
fi

# pull in sysconfig settings
[ -f /etc/default/php-fastcgi ] && . /etc/default/php-fastcgi

prog="php5-cgi"

# Some functions to make the below more readable
SPAWN=/usr/bin/spawn-fcgi
PHP=/usr/bin/php5-cgi
FCGI_SOCKET=/tmp/php-fastcgi.sock
PID_FILE=/var/run/php-fastcgi.pid

start()
{
  echo -n $"Starting $prog: "
  $SPAWN $OPTIONS -f $PHP -s $FCGI_SOCKET -C $PHP_FCGI_CHILDREN -P $PID_FILE -u $EXEC_AS_USER &>/dev/null
  rc_status -v

  chmod go+w $FCGI_SOCKET
}

stop()
{
  echo -n $"Stopping $prog: "
  killproc -p $PID_FILE php5
  rc_status -v
}

rc_reset
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    sleep 1
    start
    ;;
  *)
    echo $"Usage: $0 {start|stop|restart}"
    exit 1
esac
rc_exit
