#!/usr/bin/env python

import re

def format_memory(bytes):
  if bytes >= 1024*1024:
    return "%i MB" % (bytes / (1024 * 1024))
  elif bytes >= 1024:
    return "%i kB" % (bytes / 1024)
  else:
    return "%i bytes"

if __name__ == "__main__":
  memtotal = None
  memfree = None
  swaptotal = None
  swapfree = None
  with open("/proc/meminfo", "r") as file:
    for line in file:
      label, value = line.split(None, 1)

      label = label.lower().rstrip(":")
      value = value.strip()
      match = re.match(r"^(\d+)\s+(kb|mb|gb)$", value, re.IGNORECASE)
      if match:
        value = int(match.group(1)) * 1024
        if match.group(2).lower() != "kb":
          value *= 1024
          if match.group(2).lower() != "mb":
            value *= 1024
      else:
        value = int(value)

      if label == "memtotal":
        memtotal = value
      elif label == "memfree":
        memfree = value
      elif label == "swaptotal":
        swaptotal = value
      elif label == "swapfree":
        swapfree = value

  mempercentage = round(float(memfree) / memtotal * 100)
  swappercentage = round(float(swapfree) / swaptotal * 100)

  status = "memory %i%% (%s/%s) swap %i%% (%s/%s)" % (
    mempercentage, format_memory(memfree), format_memory(memtotal),
    swappercentage, format_memory(swapfree), format_memory(swaptotal)
  )

  perfdata = "memory=%i swap=%i" % (mempercentage, swappercentage)

  output = "%s|%s" % (status, perfdata)

  print "OK - " + output
